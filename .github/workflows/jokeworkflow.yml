name: Daily README Update
on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ secrets.USERNAME }}/${{ secrets.USERNAME }}
          token: ${{ secrets.SECRET }}
      
      - name: Fetch joke
        run: |
          JOKE_DATA=$(curl -s ${{ secrets.JOKE_URL }})
          SETUP=$(echo $JOKE_DATA | jq -r '.setup')
          PUNCHLINE=$(echo $JOKE_DATA | jq -r '.punchline')
          echo "<details>" > joke.txt
          echo "  <summary>$SETUP</summary>" >> joke.txt
          echo "  " >> joke.txt
          echo "  $PUNCHLINE" >> joke.txt
          echo "</details>" >> joke.txt

      - name: Fetch latest blog posts
        run: |
          BLOG_DATA=$(curl -s https://atakangul.com/blogs/most-viewed)
          echo "Raw API response:"
          echo "$BLOG_DATA"
          if jq -e . >/dev/null 2>&1 <<<"$BLOG_DATA"; then
            echo $BLOG_DATA | jq -r 'if type == "array" then .[0:3] else . end | if type == "array" then map("- **" + (.title // "No Title") + "**\n  - Topic: " + (.description // "No Description") + "\n  - [Read Article](" + (.url // "#") + ")") | join("\n") else "Error: Unexpected data structure" end' > blog_posts.txt
          else
            echo "Error: Invalid JSON response from API" > blog_posts.txt
          fi
          echo "Processed blog posts:"
          cat blog_posts.txt

      - name: Update README
        run: |
          CURRENT_DATE=$(date +"%B %d, %Y")
          awk '
          BEGIN {
            joke = 0
            blog = 0
          }
          /^## You like jokes\?/ {
            print
            system("cat joke.txt")
            joke = 1
            next
          }
          /^## Latest Articles/ {
            print
            system("cat blog_posts.txt")
            print "---"
            print "Last updated: " ENVIRON["CURRENT_DATE"]
            blog = 1
            next
          }
          joke && /^## What I focus on The Most/ {
            joke = 0
          }
          blog && /^---/ {
            blog = 0
            next
          }
          !joke && !blog {
            print
          }
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Commit and push changes
        run: |
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.USERNAME }}
          git add README.md
          git commit -m "Update README with latest joke and blog posts" || exit 0
          git push https://${{ secrets.SECRET }}@github.com/${{ secrets.USERNAME }}/${{ secrets.USERNAME }}.git
